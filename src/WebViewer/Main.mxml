<?xml version="1.0"?>
<mx:Application 
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:clg="Collage.Document.*"
	xmlns:degrafa="http://www.degrafa.com/2007"
	layout="absolute" 
	height="100%"
	width="100%"
	borderThickness="1"
	borderColor="#999999"
	backgroundColor="#ffffff"
	backgroundAlpha="1.0"
	applicationComplete="Initialize();"
	keyDown="HandleKeyDown(event);"
	horizontalScrollPolicy="off"
	verticalScrollPolicy="off" >
	<mx:Style source="../Common/yflexskin.css"/>
	<mx:Style source="../Common/collageBasic.css"/>
	<mx:Script>
	<![CDATA[
		import mx.containers.dividedBoxClasses.BoxDivider;
		import com.adobe.serialization.json.JSON;
		import Collage.Document.*;
		import Collage.Clips.Picture.*;
		import mx.controls.Alert;
		import mx.managers.PopUpManager;
		import mx.core.IFlexDisplayObject;
		import mx.events.*;
		import flash.events.*;
		import Collage.DataEngine.*;
		import Collage.Logger.Logger;
		import Collage.Logger.LogEntry;

		private var _DashboardURL:String = "";

		private function Initialize():void
		{
			Logger.Log("Application Started", LogEntry.DEBUG   , this);

			_DashboardURL = Application.application.parameters.dashboard_url;
			OpenDashboardFromURL(_DashboardURL);

			//stage.addEventListener(KeyboardEvent.KEY_DOWN, HandleKeyDown);

			/*Session.events.addEventListener(Session.LOGIN_SUCCESS, HandleLoginSuccess);
			Session.events.addEventListener(Session.TOKEN_EXPIRED, HandleTokenExpired);
			Session.CheckToken();*/
		}
/*
		public function HandleLoginSuccess(event:Event):void {
			DataEngine.LoadAllDataSets();
		}

		public function HandleLoginFailure(event:Event):void {
			PopUpManager.createPopUp(this, Login, true);
		}

		public function HandleTokenExpired(event:Event):void {
			PopUpManager.createPopUp(this, Login, true);
		}
*/
		private function Fullscreen():void
		{
		}

		private function HandleKeyDown(event:KeyboardEvent):void
		{
		}

		public function OpenDashboardFromURL(dashURL:String):void
		{
			try {
				var dashLoader:URLLoader = new URLLoader();
				dashLoader.addEventListener(Event.COMPLETE, CompleteHandler);
	            dashLoader.addEventListener(SecurityErrorEvent.SECURITY_ERROR, SecurityErrorHandler);
	            dashLoader.addEventListener(HTTPStatusEvent.HTTP_STATUS, HttpStatusHandler);
	            dashLoader.addEventListener(IOErrorEvent.IO_ERROR, IOErrorHandler);

				dashLoader.load(new URLRequest(dashURL));
			} catch (error:Error) {
				Alert.show(error.message);
			}
		}
		
		private function HttpStatusHandler(event:HTTPStatusEvent):void
		{
            event.target.removeEventListener(HTTPStatusEvent.HTTP_STATUS, HttpStatusHandler);
//			Alert.show("Dashboard HTTP Status: " + event);
			Logger.Log("Dashboard HTTP Status: " + event, LogEntry.DEBUG);
		}
		
		private function IOErrorHandler(event:IOErrorEvent):void
		{
            event.target.removeEventListener(IOErrorEvent.IO_ERROR, IOErrorHandler);
//			Alert.show("Dashboard IO Error: " + event);
		}
		
        private function SecurityErrorHandler(event:SecurityErrorEvent):void
		{
            event.target.removeEventListener(SecurityErrorEvent.SECURITY_ERROR, SecurityErrorHandler);
//			Alert.show("Dashboard Security Error: " + event);
        }

		private function CompleteHandler(event:Event):void
		{
//			Alert.show("Complete");
			event.target.removeEventListener(Event.COMPLETE, CompleteHandler);
			var results:Object = JSON.decode(event.target.data);
		    _DocumentView.model.LoadFromObject(results);
		}
	]]>
	</mx:Script>
	<mx:Canvas id="viewCanvas" label="Canvas 1" right="0" left="0" top="0" bottom="0" color="0x323232" backgroundColor="#ACACAC" backgroundAlpha="1">
		<mx:Box top="0" left="0" right="0" bottom="0" horizontalAlign="center" verticalAlign="middle" backgroundAlpha="0" backgroundColor="0xffffff">
			<clg:DocumentView id="_DocumentView" 
					width="800" height="600" 
					dropShadowEnabled="true" 
					borderStyle="solid"
					dropShadowColor="0x000000"
					backgroundColor="#FFFFFF" backgroundAlpha="1" borderThickness="0"
					horizontalScrollPolicy="off"
					verticalScrollPolicy="off" >
			</clg:DocumentView>
		</mx:Box>
	</mx:Canvas>
</mx:Application>
