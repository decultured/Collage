<?xml version="1.0" encoding="utf-8"?>
<clg:ClipEditor xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:clg="Collage.Clip.*"
	xmlns:flexlib="flexlib.containers.*"
	backgroundColor="0x000000"
	backgroundAlpha="0"
	horizontalScrollPolicy="off"
	verticalScrollPolicy="off"
	creationComplete="Initialize()" 
	width="100%" >
	<mx:Style>
	    .linkButtonWindowShade {
	      	headerClass:ClassReference('mx.controls.LinkButton');
	      	header-style-name: linkButtonStyle;
	     	drop-shadow-enabled:false;
	      	corner-radius:3;
	      	border-style:solid;
	    	background-color:#ddd;
			padding-left:5;
			padding-right:5;
			padding-top:5;
			padding-bottom:5;
	    }         
	    
	    .linkButtonStyle {
	    	corner-radius:3;
	    	fill-alphas:1,1;
	    	padding-left:10;
	    }
	</mx:Style>
	<mx:Script>
	<![CDATA[
		import mx.controls.Alert;
		import Collage.DataEngine.*;
		import mx.collections.ArrayCollection;

		// min, max, average/avg, sum, count, mode
		[Bindable]
		public var modifierSelections:ArrayCollection = new ArrayCollection(
		    [ {label:"Min", data:"min"},
		      {label:"Max", data:"max"},
		      {label:"Average", data:"avg"},
		      {label:"Sum", data:"sum"},
		      {label:"Count", data:"count"},
		      {label:"Mode", data:"mode"}
			]);
	
		[Bindable] public var dataSetSelections:Array = new Array();
		[Bindable] public var dataSetColumnSelections:Array = new Array();

		private function Initialize():void
		{
			DataEngineConnect();
			if (_Model) {
				var dataLabelModel:DataLabelClip = _Model as DataLabelClip;
			}
		}
		
		private function SettingsChanged():void
		{
			if (_Model) {
				var dataLabelModel:DataLabelClip = _Model as DataLabelClip;
				dataLabelModel.color = textColorPicker.selectedColor;
				dataLabelModel.backgroundColor = backgroundColorPicker.selectedColor;
				dataLabelModel.backgroundAlpha = transparencySlider.value;
				dataLabelModel.fontSize = textFontSize.value;
			}
		}

		private function DataEngineConnect():void
		{
			if (!DataEngine.loaded)
				DataEngine.events.addEventListener(DataEngine.COMPLETE, DatasLoaded);
			else DatasLoaded(null);
		}
		
		private function DatasLoaded(event:Event):void
		{
			DataEngine.events.removeEventListener(DataEngine.COMPLETE, DatasLoaded);
			dataSetSelections = DataEngine.GetDataSetsComboBox(new Array("numeric", "datetime"), 2, 3);
		}

		private function ColumnSelectorChanged():void
		{
			var dataset:DataSet = DataEngine.GetDataSetByID(dataSetSelector.selectedItem.data);

			if (!dataset || !_Model)
				return;
			
			var dataLabelModel:DataLabelClip = _Model as DataLabelClip;
			var dataColumn:DataSetColumn = dataset.GetColumnByID(dataSetColumnSelector.selectedItem.data);
			dataLabelModel.dataSetColumnModifier = modifierSelector.selectedItem.data;

			if (dataColumn) {
				dataLabelModel.dataSetColumn = dataColumn.label;
			}

			dataLabelModel.RunQuery();
		}
		
		private function ModifierSelectorChanged():void
		{
			if (!_Model)
				return;
			
			var dataLabelModel:DataLabelClip = _Model as DataLabelClip;
			dataLabelModel.dataSetColumnModifier = modifierSelector.selectedItem.data;
			dataLabelModel.RunQuery();
		}
		
		private function DataSetSelectorChanged():void
		{
			if (!_Model)
				return;
				
			var dataLabelModel:DataLabelClip = _Model as DataLabelClip;

			dataLabelModel.dataSetColumn = null;
			dataLabelModel.ResetData();

			var dataset:DataSet = DataEngine.GetDataSetByID(dataSetSelector.selectedItem.data);

			if (dataset) {
				dataLabelModel.dataSetID = dataSetSelector.selectedItem.data;
				dataSetColumnSelections = dataset.GetColumnsComboBox();
				dataSetColumnSelector.enabled = true;
				modifierSelector.enabled = true;
			} else {
				dataLabelModel.dataSetID = null;
				dataSetColumnSelector.enabled = false;
				modifierSelector.enabled = false;
				dataLabelModel.ResetData();
			}
		}

	]]>
    </mx:Script>
	<flexlib:WindowShade label="Data Connection" styleName="linkButtonWindowShade" width="100%">
		<mx:Label text="Data Set:" color="#000000" fontWeight="bold" />
		<mx:ComboBox id="dataSetSelector" dataProvider="{dataSetSelections}" width="230" change="DataSetSelectorChanged()"/>
		<mx:Label text="Y Axis Value:" color="#000000" fontWeight="bold" />
		<mx:ComboBox id="dataSetColumnSelector" dataProvider="{dataSetColumnSelections}" enabled="false" width="230" change="ColumnSelectorChanged()"/>
		<mx:Label text="Modifier:" color="#000000" fontWeight="bold" />
		<mx:ComboBox id="modifierSelector" dataProvider="{modifierSelections}" enabled="false" width="230" change="ModifierSelectorChanged()"/>
	</flexlib:WindowShade>
	<flexlib:WindowShade label="General Styles" styleName="linkButtonWindowShade" width="100%">
		<mx:HBox width="100%" >
			<mx:Label text="Text Color:" color="#000000" fontWeight="bold" /><mx:ColorPicker id="textColorPicker" showTextField="true" selectedColor="0x000000" change="SettingsChanged()" />
		</mx:HBox>
		<mx:HBox width="100%" >
			<mx:Label text="Background Color:" color="#000000" fontWeight="bold" /><mx:ColorPicker id="backgroundColorPicker" showTextField="true" selectedColor="0xFFFFFF" change="SettingsChanged()" />
		</mx:HBox>
		<mx:Label text="Background Transparency:" color="#000000" fontWeight="bold" />
		<mx:HSlider id="transparencySlider" minimum="0" maximum="1" value="1"
            allowTrackClick="true" liveDragging="true" change="SettingsChanged()" />
		<mx:Label text="Font Size:" color="#000000" fontWeight="bold" />
		<mx:HSlider id="textFontSize" minimum="6" maximum="96" value="18" snapInterval="1" change="SettingsChanged()" />
	</flexlib:WindowShade>
	
</clg:ClipEditor>