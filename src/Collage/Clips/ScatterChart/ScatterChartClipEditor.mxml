<?xml version="1.0" encoding="utf-8"?>
<clg:ClipEditor xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:clg="Collage.Clip.*"
	xmlns:flexlib="flexlib.containers.*"
	backgroundColor="0x000000"
	backgroundAlpha="0"
	horizontalScrollPolicy="off"
	verticalScrollPolicy="off"
	creationComplete="Initialize()" 
	width="100%">
	<mx:Style>
	    .linkButtonWindowShade {
	      	headerClass:ClassReference('mx.controls.LinkButton');
	      	header-style-name: linkButtonStyle;
	     	drop-shadow-enabled:false;
	      	corner-radius:3;
	      	border-style:solid;
	    	background-color:#ddd;
			padding-left:5;
			padding-right:5;
			padding-top:5;
			padding-bottom:5;
	    }         
	    
	    .linkButtonStyle {
	    	corner-radius:3;
	    	fill-alphas:1,1;
	    	padding-left:10;
	    }
	</mx:Style>
	<mx:Script>
	<![CDATA[
		import mx.controls.Alert;
		import Collage.DataEngine.*;
		import mx.collections.ArrayCollection;
		
		[Bindable] public var dataSetSelections:Array = new Array();
		[Bindable] public var dataSetColumnSelections:Array = new Array();
		
		private function Initialize():void
		{
			DataEngineConnect();
			UpdateInspector();
		}
		
		private function UpdateInspector():void
		{
			if (_Model) {
				var scatterChartModel:ScatterChartClip = _Model as ScatterChartClip;
				backgroundColorPicker.selectedColor = scatterChartModel.backgroundColor;
			}
		}
		
		private function SettingsChanged():void
		{
			if (_Model) {
				var scatterChartModel:ScatterChartClip = _Model as ScatterChartClip;
				scatterChartModel.backgroundColor = backgroundColorPicker.selectedColor;
			}
		}
		
		private function DataEngineConnect():void
		{
			if (!DataEngine.loaded)
				DataEngine.events.addEventListener(DataEngine.COMPLETE, DatasLoaded);
			else DatasLoaded(null);
		}
		
		private function DatasLoaded(event:Event):void
		{
			DataEngine.events.removeEventListener(DataEngine.COMPLETE, DatasLoaded);
			dataSetSelections = DataEngine.GetDataSetsComboBox(new Array("numeric", "datetime"), 2, 3);
		}

		private function ColumnSelectorChanged():void
		{
			var dataset:DataSet = DataEngine.GetDataSetByID(dataSetSelector.selectedItem.data);

			if (!dataset || !_Model)
				return;
			
			var scatterChartModel:ScatterChartClip = _Model as ScatterChartClip;

			var xDataColumn:DataSetColumn = dataset.GetColumnByID(dataSetXColumnSelector.selectedItem.data);
			var yDataColumn:DataSetColumn = dataset.GetColumnByID(dataSetYColumnSelector.selectedItem.data);

			if (yDataColumn) {
				scatterChartModel.yAxisDataColumn = yDataColumn.label;
			}

			if (xDataColumn) {
				scatterChartModel.xAxisDataColumn = xDataColumn.label;
			}
			
			scatterChartModel.RunQuery();
			UpdateInspector();
		}
		
		private function SubmitDataRequest():void
		{
			var scatterChartModel:ScatterChartClip = _Model as ScatterChartClip;
			scatterChartModel.rowsRequested = parseInt(rowsRequested.text);
			if (isNaN(scatterChartModel.rowsRequested) || scatterChartModel.rowsRequested < 1) scatterChartModel.rowsRequested = 1;
			if (scatterChartModel.rowsRequested > 1000) scatterChartModel.rowsRequested = 1000;
			rowsRequested.text = scatterChartModel.rowsRequested.toString();
			scatterChartModel.RunQuery();
		}
		
		private function DataSetSelectorChanged():void
		{
			if (!_Model)
				return;
				
			var scatterChartModel:ScatterChartClip = _Model as ScatterChartClip;

			scatterChartModel.yAxisDataColumn = null;
			scatterChartModel.xAxisDataColumn = null;
			scatterChartModel.ResetData();

			var dataset:DataSet = DataEngine.GetDataSetByID(dataSetSelector.selectedItem.data);

			if (dataset) {
				scatterChartModel.dataSetID = dataset.id;
				dataSetColumnSelections = dataset.GetColumnsComboBox(new Array("numeric", "datetime"));
				dataSetYColumnSelector.enabled = true;
				dataSetXColumnSelector.enabled = true;
			} else {
				dataSetYColumnSelector.enabled = false;
				dataSetXColumnSelector.enabled = false;
				scatterChartModel.ResetData();
			}
			
			UpdateInspector();
		}
	]]>
    </mx:Script>
	<flexlib:WindowShade label="Data Connection" styleName="linkButtonWindowShade" width="100%">
		<mx:Label text="Data Set:" color="#000000" fontWeight="bold" />
		<mx:ComboBox id="dataSetSelector" dataProvider="{dataSetSelections}" width="230" change="DataSetSelectorChanged()"/>
		<mx:Label text="Y Axis Value:" color="#000000" fontWeight="bold" />
		<mx:ComboBox id="dataSetYColumnSelector" dataProvider="{dataSetColumnSelections}" enabled="false" width="230" change="ColumnSelectorChanged()"/>
		<mx:Label text="X Axis Value:" color="#000000" fontWeight="bold" />
		<mx:ComboBox id="dataSetXColumnSelector" dataProvider="{dataSetColumnSelections}" enabled="false" width="230" change="ColumnSelectorChanged()"/>
		<mx:Label text="Rows Requested:" color="#000000" fontWeight="bold" />
		<mx:TextInput id="rowsRequested" text="10" color="0x323232" width="100%" />
		<mx:Button id="submitDataButton" color="0x323232" label="Apply" click="SubmitDataRequest()"  />
	</flexlib:WindowShade>
	<flexlib:WindowShade opened="false" label="General Styles" styleName="linkButtonWindowShade" width="100%">
		<mx:HBox width="100%" >
			<mx:Label text="Background Color:" color="#000000" fontWeight="bold" />
			<mx:Spacer width="100%" />
			<mx:ColorPicker id="backgroundColorPicker" showTextField="true" selectedColor="0xFFFFFF" change="SettingsChanged()" />
			<mx:Spacer width="30" />
		</mx:HBox>
	</flexlib:WindowShade>
</clg:ClipEditor>