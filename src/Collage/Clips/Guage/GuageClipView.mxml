<?xml version="1.0" encoding="utf-8"?>
<clg:ClipView xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:clg="Collage.Clip.*"
	backgroundColor="0x000000"
	backgroundAlpha="0"
	horizontalScrollPolicy="off"
	verticalScrollPolicy="off"
	xmlns:degrafa="http://www.degrafa.com/2007"
	xmlns:flash.filters="flash.filters.*"
	xmlns:controls="com.brightPoint.controls.*"
	>
	
	<mx:Style>
		.dialSkin {
			faceSkin: ClassReference("com.brightPoint.controls.gauge.DialSkin");
			indicatorSkin: ClassReference("com.brightPoint.controls.gauge.DialSkin");
			indicatorCrownSkin: ClassReference("com.brightPoint.controls.gauge.DialSkin");
			highlightSkin: ClassReference("com.brightPoint.controls.gauge.DialSkin");
		}
		
		.gaugeSkin {
			faceSkin: ClassReference("com.brightPoint.controls.gauge.GaugeSkin");
			indicatorSkin: ClassReference("com.brightPoint.controls.gauge.GaugeSkin");
			indicatorCrownSkin: ClassReference("com.brightPoint.controls.gauge.GaugeSkin");
			highlightSkin: ClassReference("com.brightPoint.controls.gauge.GaugeSkin");
		}
		
		.gaugeLabel {
			fontSize:14pt;
			color:#FFFFFF;	
		}
	
	</mx:Style>
	<mx:Script>
		<![CDATA[
		import com.brightPoint.controls.gauge.GaugeSkin;
        import mx.collections.ArrayCollection;
		import mx.events.PropertyChangeEvent;

		protected override function onModelChange( event:PropertyChangeEvent):void
		{
			var guageModel:GuageClip = _Model as GuageClip;
			if (guageModel.width > guageModel.height)
				gauge.diameter = guageModel.height;
			else
				gauge.diameter = guageModel.width;
				
			super.onModelChange(event);
		}
		]]>
    </mx:Script>
	<controls:DegrafaGauge id="gauge" diameter="400" liveDragging="true"
		horizontalCenter="0" verticalCenter="0"
		styleName="gauge"
		labelStyleName="gaugeLabel"
		value="{model.value}"
		startAngle="{model.startAngle}"
		minimum="{model.minimum}"
		maximum="{model.maximum}" 
		endAngle="{model.endAngle}" 
		labelFormatter="{formatter}"
		indicatorColor="{model.indicatorColor}"
		indicatorCrownColor="{model.indicatorCrownColor}"
		measureMarksAlpha="{model.measureMarksAlpha}"
		measureMarksColor="{model.measureMarksColor}"
		backgroundColor="{model.backgroundColor}"
		bezelColor="{model.bezelColor}"
		/>
	<mx:NumberFormatter precision="0" id="formatter"/>
</clg:ClipView>