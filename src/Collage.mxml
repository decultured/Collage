<?xml version="1.0" encoding="utf-8"?> 
<mx:WindowedApplication 
	xmlns:mx="http://www.adobe.com/2006/mxml"
	layout="absolute"
	applicationComplete="Initialize()"
    paste="HandlePaste(event)"
	nativeDragEnter="onDragIn(event)" 
	nativeDragDrop="onDrop(event)" >
	
	<mx:Style> 
		WindowedApplication
		{
			background-color:"0x777777";
			background-alpha:"1.0";
		}
	</mx:Style>
	<mx:Script>
	<![CDATA[
		import Collage.Document.*;
		import Collage.Clips.Picture.*;
		import mx.graphics.ImageSnapshot;
		import mx.controls.Alert;
		import mx.events.FlexEvent;
		import flash.desktop.Clipboard;
	    import flash.desktop.ClipboardFormats;
	    import flash.desktop.ClipboardTransferMode;

		private var _EditDocumentView:EditDocumentView;
		private var _Document:Document;

		private function Initialize():void
		{
			stage.addEventListener(KeyboardEvent.KEY_DOWN, HandleKeyDown); 

			_Document = new Document();
			_EditDocumentView = _Document.view as EditDocumentView;
			_EditDocumentView.InitializeForEdit(mainEditCanvas, inspectorWindow, optionsBox);
		}

		private function Fullscreen():void
		{
			if (stage.displayState == StageDisplayState.FULL_SCREEN_INTERACTIVE)
				stage.displayState = StageDisplayState.NORMAL;
			else
				stage.displayState = StageDisplayState.FULL_SCREEN_INTERACTIVE;
		}
		
		private function HandleKeyDown(event:KeyboardEvent):void
		{
		}
		
		public function HandlePaste(event:Event):void
		{
			if (Clipboard.generalClipboard.hasFormat(ClipboardFormats.BITMAP_FORMAT)) {
				_EditDocumentView.AddClipFromData(Clipboard.generalClipboard.getData(ClipboardFormats.BITMAP_FORMAT) as BitmapData);
			} else if (Clipboard.generalClipboard.hasFormat(ClipboardFormats.TEXT_FORMAT)) {
				_EditDocumentView.AddClipFromData(Clipboard.generalClipboard.getData(ClipboardFormats.TEXT_FORMAT) as String);
			}
		}
		
		public function SaveImage():void
		{
			var file:File = File.desktopDirectory.resolvePath("snapshot.png");
			file.addEventListener(Event.SELECT, SaveImageEvent);
			file.browseForSave("Save As");
		}
			
		protected function SaveImageEvent(event:Event):void
		{
			var snapshot:ImageSnapshot = ImageSnapshot.captureImage(mainEditCanvas);
			
			var newFile:File = event.target as File;
			var fs:FileStream = new FileStream();
			try{
				fs.open(newFile,FileMode.WRITE);
				fs.writeBytes(snapshot.data, 0, snapshot.data.length); 
				fs.close();
			} catch(e:Error){
				trace(e.message);
			}
		}
		
		private function onDragIn(event:NativeDragEvent):void{
			NativeDragManager.acceptDragDrop(this);
		}

		private function onDrop(event:NativeDragEvent):void{
			var dropfiles:Array = event.clipboard.getData(ClipboardFormats.FILE_LIST_FORMAT) as Array;
			for each (var file:File in dropfiles){
				var ext:String = file.extension.toLowerCase();
				
				if (ext == "png" || ext == "jpg" || ext == "jpeg" || ext == "gif") {
					var newClip:PictureClip = _EditDocumentView.AddClipByType("image") as PictureClip;
					newClip.url = file.url;
				} else {
					//Alert.show("Unmapped Extension");
				}
			}
		}
	]]>
	</mx:Script>
	<mx:ApplicationControlBar height="40" top="0" left="0" right="0" paddingTop="3" paddingBottom="3" >
		<mx:Image id="fullscreenBtn" source="@Embed('../assets/icons/fullscreen.png')" width="32" height="32" click="Fullscreen();" />
		<mx:Image id="saveImageBtn" source="@Embed('../assets/icons/save_image.png')" width="32" height="32" click="SaveImage();" />
		<mx:Image id="PasteBtn" source="@Embed('../assets/icons/paste.png')" width="32" height="32" click="HandlePaste(null);" />
		<mx:VRule height="32" />
		<mx:Image id="addImageBtn" source="@Embed('../assets/icons/picture.png')" width="32" height="32" click="_EditDocumentView.AddClipByType('image', new Rectangle(150, 150, 300, 300));" />
		<mx:Image id="addLabelBtn" source="@Embed('../assets/icons/label.png')" width="32" height="32" click="_EditDocumentView.AddClipByType('label', new Rectangle(150, 150, 300, 300));" />
		<mx:Image id="addTextBoxBtn" source="@Embed('../assets/icons/text_box.png')" width="32" height="32" click="_EditDocumentView.AddClipByType('textbox', new Rectangle(150, 150, 300, 300));" />
		<mx:Image id="addLineChartBtn" source="@Embed('../assets/icons/line_chart.png')" width="32" height="32" click="_EditDocumentView.AddClipByType('linechart', new Rectangle(150, 150, 300, 300));" />
	</mx:ApplicationControlBar>
    <mx:HDividedBox top="40" left="0" right="0" bottom="0">
        <mx:Canvas label="Canvas 1" width="100%" height="100%" color="0x323232" backgroundColor="#ACACAC">
			<mx:Box top="0" left="0" right="0" bottom="0" paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10"  horizontalAlign="center" verticalAlign="middle">
				<mx:Canvas id="mainEditCanvas" 
					width="1024" height="768" 
					dropShadowEnabled="true" 
					click="_EditDocumentView.BackgroundClick(event);" 
					backgroundColor="#FFFFFF" backgroundAlpha="1" borderThickness="0"
					horizontalScrollPolicy="off"
					verticalScrollPolicy="off" >
					<mx:HBox id="optionsBox" visible="false" paddingBottom="6" paddingTop="6">
						<mx:Image id="lockButton" source="@Embed('../assets/icons/lock.png')" click="_EditDocumentView.lockSelected()" />
						<mx:Image id="deleteButton" source="@Embed('../assets/icons/delete.png')" click="_EditDocumentView.deleteSelected()" />
					</mx:HBox>			
				</mx:Canvas>
			</mx:Box>
        </mx:Canvas>
        <mx:Box id="inspectorWindow" width="250" height="100%" backgroundColor="#FFFFFF" backgroundAlpha="1" horizontalScrollPolicy="off" paddingLeft="5" paddingRight="5" paddingTop="5" paddingBottom="5"  >
        </mx:Box>
    </mx:HDividedBox>
</mx:WindowedApplication>